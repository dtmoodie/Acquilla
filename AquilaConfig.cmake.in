# ===================================================================================
#  The Aquila CMake configuration file
#
#             ** File generated automatically, do not modify **
#
#  Usage from an external project:
#    In your CMakeLists.txt, add these lines:
#
#    FIND_PACKAGE(Aquila REQUIRED)
#    TARGET_LINK_LIBRARIES(MY_TARGET_NAME ${Aquila_LIBS})
#
#    Or you can search for specific OpenCV modules:
#
#    FIND_PACKAGE(Aquila REQUIRED)
#

#
#    This file will define the following variables:
#      - Aquila_LIBS                     : The list of libraries to link against.
#      - Aquila_LIB_DIR_<CONFIG>         : The directory(es) where lib files are. Calling LINK_DIRECTORIES
#                                          with this path is NOT needed.
#      - Aquila_INCLUDE_DIRS             : The Aquila include directories.
#      - Aquila_COMPUTE_CAPABILITIES     : The version of compute capability
#      - Aquila_VERSION                  : The version of this Aquila build. Example: "2.4.0"
#      - Aquila_VERSION_MAJOR            : Major version part of Aquila_VERSION. Example: "2"
#      - Aquila_VERSION_MINOR            : Minor version part of Aquila_VERSION. Example: "4"
#      - Aquila_VERSION_PATCH            : Patch version part of Aquila_VERSION. Example: "0"
#
# ===================================================================================


# - Config file for the Aquila package
# It defines the following variables
#  Aquila_INCLUDE_DIRS - include directories for Aquila
#  Aquila_LIBRARIES    - libraries to link against

# Compute paths
get_filename_component(Aquila_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

# Our library dependencies (contains definitions for IMPORTED targets)

set(Aquila_HAS_QT "@AQ_QT@")

include(${Aquila_DIR}/cmake/configure_bin_dirs.cmake)
include(${Aquila_DIR}/cmake/utilities.cmake)

find_package(Eigen3 REQUIRED)

if(Aquila_HAS_QT AND NOT TARGET Qt5::OpenGL)
    find_package(Qt5 REQUIRED COMPONENTS OpenGL)
endif(Aquila_HAS_QT AND NOT TARGET Qt5::OpenGL)

if(NOT TARGET MetaObject)
    find_package(MetaObject REQUIRED)
endif(NOT TARGET MetaObject)

if(NOT RCC_INCLUDE_DIRS)
    find_package(RCC REQUIRED)
endif(NOT RCC_INCLUDE_DIRS)

if(Aquila_FIND_COMPONENTS)
    foreach(PLUGIN ${Aquila_FIND_COMPONENTS})
        if(NOT TARGET ${PLUGIN} AND NOT TARGET aquila_${PLUGIN})
            if(EXISTS "${Aquila_DIR}/${PLUGIN}Targets.cmake")
                include("${Aquila_DIR}/${PLUGIN}Targets.cmake")
                set(${PLUGIN}_FOUND ON)
            elseif(EXISTS "${Aquila_DIR}/aquila_${PLUGIN}Targets.cmake")
                include("${Aquila_DIR}/aquila_${PLUGIN}Targets.cmake")
                set(${PLUGIN}_FOUND ON)
            else()
                set(${PLUGIN}_FOUND OFF)
            endif()
        endif(NOT TARGET ${PLUGIN} AND NOT TARGET aquila_${PLUGIN})
    endforeach()
endif()

set(Aquila_INCLUDE_DIRS "${Aquila_DIR}/../../include;${MetaObject_INCLUDE_DIRS};${RCC_INCLUDE_DIRS};${EIGEN3_INCLUDE_DIR}")
if(NOT TARGET Aquila)
  include("${Aquila_DIR}/AquilaTargets.cmake")
endif()

# These are IMPORTED targets created by AquilaTargets.cmake
set(Aquila_LIBRARIES Aquila)
set(Aquila_LIB_DIR ${Aquila_DIR}/lib)
set(Aquila_BIN_DIRS ${Aquila_DIR}/bin;${MetaObject_BIN_DIRS})
set(Aquila_FOUND ON)
